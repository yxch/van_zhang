
============================================================sublime==================================================

2015-09-18

如果没有安装插件管理 Package Control，按如下步骤操作，（仅适用于sublime text 3）:
1、通过快捷键 ctrl+` 或者 View > Show Console 菜单打开控制台
2、粘贴如下代码后回车安装
import  urllib.request,os;pf='Package Control.sublime-package';ipp=sublime.installed_packages_path();urllib.request.install_opener(urllib.request.build_opener(urllib.request.ProxyHandler()));open(os.path.join(ipp,pf),'wb').write(urllib.request.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read())
3，重启sublime text


自定义颜色
生成自定义颜色的地址是:  http://tmtheme-editor.herokuapp.com/    生成好之后可以保存下来.
Sublime Text 2 和 Sublime Text 3都支持

把生成的文件放到安装目录的:Data\Packages\Color Scheme - Default文件夹下就可以了.

我的submline设置：

{
	"color_scheme": "Packages/User/SublimeLinter/van_zhang.tmTheme",
	"font_face": "Simplified Arabic Fixed",
	"font_face": "Microsoft YaHei",
	"font_size": 12,
	"ignored_packages":
	[
	],
	"update_check": false,
	"word_wrap": "auto",
	"fade_fold_buttons": false,
	"show_encoding": true,
	"trim_trailing_white_space_on_save": true,
	"show_full_path": true,
	"bold_folder_labels": true,
	"line_padding_bottom": 2,
	"line_padding_top": 2
}


============================================================vi======================================================


vi filename 
指示shell启动vi编辑器，并将参数filename传给它。如果当前目前中存在该文件，则vi编辑器将它解释为要打开的文件；
如果没有该文件，则vi编译器创建新文件

vi file1 file2 file3 
shell传递3个参数给vi，vi将它们解释为要打开的文件。可以使用:w命令保存文件，使用:n命令访问下一个文件


G 将光标移到文件的最后一行
w 将光标向前移到下一个单词的首字母
e 将光标向前移到下一个单词的最后一个字母
- 将光标定位到上一行的行首
+ 将光标定位到下一行的行首
L 将光标定位到屏幕的最下面一行
M 将光标定位到屏幕中间的一行
H 将光标定位到屏幕的最上面一行
'' 两个单引号将光标移到它的先前的位置
fb 将光标向前移到当前行上的下一个字母b（或者其他的任意指定的字符）
Fb 将光标向后移到当前行上的上一个字母b（或指定的字符）
t# 将光标移到当前行上字符＃的第1个实例的右侧。例如，命令tM将光标移到当前行上第1个M的右侧
T# 在当前行上向左移动光标，将它移到字符＃的第1个实例的前一字符
/word 将光标向前移到单词word的下一个实例
?word 将光标向后移到单词word的上一个实例
n 将光标移到前面命令/word或?word中指定模式的下一个实例

Ctrl+D 显示文件中的下半屏文本
Ctrl+U 显示文件中的上半屏文本
Ctrl+F 显示文件中的下一屏文本
Ctrl+B 显示文件中的上一屏文本

:set number 将行号作为屏幕显示的一部分，但是行号并不是文件的一部分。它的缩写形式为:set nu
:set nonumber 清除屏幕上的行号。也可以使用缩写形式:set nonu
:set showmode 在屏幕的右下角显示追加模式信息
:set list 在每行的行末显示美元符号，并用Ctrl+I表示制表符
:set showmatch 在输入）或］时，将光标移到与之匹配的（或[
:set window=value 定义屏幕上显示的文本行的行数
:set autoindent 自动缩进。也可以使用缩写形式:set ai
:set tabstop=value 设置显示制表符的空格字符个数。也可以使用缩写形式ts=value
:set wrapmargin=value 设置显示器的右页边。当输入进入所设置的页边时，编辑器自动回车换行
:set ignorecase 指示编辑器搜索字符串，并忽略目标中字母的大小写
:set 显示设置的所有选项
:set all 显示所有可以设置的选项

dd 删除当前光标所有的文本行
#dd 删除＃行文本
dw 从文本中删除一个单词
#dw 从文本中删除＃个单词
x 删除光标所在的一个字符
#x 从文本中删除＃个字符
D 删除当前行上光标后面的部分
:#,#d 例如，:12,37d 将删除第12～37行之间的所有文本，包括第12和37行

u 撤销。恢复最近一次的文本修改操作，即使已经移动了光标。在Linux系统中，再次使用撤销命令将恢复更前一次的文本修改操作。在BSD的vi中，第2次撤销操作将撤销第一次撤销操作，恢复第1次撤销前修改的文本
:redo 在Linux系统中，取消撤销操作恢复文本修改。在标准的UNIX系统中，第2个u命令取消第1个u命令，结果就是一个“redo”
U 如果在修改后还没有将光标移出当前行，则可以撤销对当前行进行的所有的文本修改


http://www.yiibai.com/nodejs/nodejs-quick-start.html
http://www.yiibai.com/postgresql/









