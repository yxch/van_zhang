
color: #D98200 暗橙色
color: #FF9900 橙色
color: #444A54 黑灰色
color: #797979 浅灰色
color: #686868 深灰色
color: #EEEEEE 淡灰色

注意CMB.class.php isbind方法存在问题

function PCURL($url,$data)
	{ 
		$curl = curl_init();                            // 启动一个CURL会话
		curl_setopt($curl, CURLOPT_URL, $url);          // 要访问的地址
		curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);  // 对认证证书来源的检查
		curl_setopt($curl, CURLOPT_SSL_VERIFYHOST, false);  // 从证书中检查SSL加密算法是否存在
		curl_setopt($curl, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); // 模拟用户使用的浏览器
		curl_setopt($curl, CURLOPT_FOLLOWLOCATION, 1);  // 使用自动跳转
		curl_setopt($curl, CURLOPT_AUTOREFERER, 1);     // 自动设置Referer
		curl_setopt($curl, CURLOPT_POST, 1);            // 发送一个常规的Post请求
		curl_setopt($curl, CURLOPT_POSTFIELDS, $data);  // Post提交的数据包
		curl_setopt($curl, CURLOPT_TIMEOUT, 30);        // 设置超时限制防止死循环
		curl_setopt($curl, CURLOPT_HEADER, 0);          // 显示返回的Header区域内容
		curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);  // 获取的信息以文件流的形式返回
		$tmpInfo = curl_exec($curl);                    // 执行操作
		//捕抓异常
		if (curl_errno($curl)){  echo curl_error($curl);}    
		curl_close($curl); // 关闭CURL会话
		return $tmpInfo; // 返回数据
	}
	
	function GCURL($url)
	{
	  $ch = curl_init();
	  curl_setopt($ch,CURLOPT_URL,$url);
	  curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);
	  curl_setopt($ch,CURLOPT_HEADER,0);
	  $res = curl_exec($ch);
	  //捕抓异常
	  if(curl_errno($ch)){  echo curl_error($ch);}    
	  curl_close($ch);
	  return $res;
	}
