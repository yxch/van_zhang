
color: #D98200 暗橙色
color: #FF9900 橙色
color: #444A54 黑灰色
color: #797979 浅灰色
color: #686868 深灰色
color: #EEEEEE 淡灰色
color: #

filter.class.php  增加 flag 'flag'=>'flag',
filter.oper.php
    $fid = isset($_GET['fid']) ? $_GET['fid'] : '';
    if(empty($fid)){ exit('Required parameter missing!');}
    if(!ctype_digit($fid)){exit('Exception access violation');}
    
    if($fid) //如果用户编辑类别
    {
        $title = "编辑数据过滤器[ID:<label id=\"id\">$fid</label>]";
    }

=================================\points\usr\master\filters\filters.php

<?php require_once $_SERVER['DOCUMENT_ROOT'] . '/points/usr/master/master.inc.php'; ?>
<!DOCTYPE html>
<html>
    <head>
       <?php points::head(0); ?>
       <link rel="stylesheet" href="/points/usr/local/css/master.css" />
       <link rel="stylesheet" href="/points/usr/local/css/grids.css" />
       <script src="/points/usr/local/js/f.js"></script>
       <script src="js/filters.js"></script>
    </head>
    <body>
        <div id="outset">
            <div id="topic"><h1>管理用户数据过滤器</h1><span id="err"></span></div>
            <table id="grids">
                <thead>
                    <tr>
                        <td class="width6">编号</td>
                        <td>过滤器名称</td>
                        <td>过滤器字段内容</td>
                        <td>过滤器搜索选项</td>
                        <td>SQL</td>
                        <td>状态</td>
                        <td>创建时间</td>
                    </tr>
                </thead>
                <tbody>
                    <tr id="loading"><td colspan="7">loading data！please wait......</td></tr>
                </tbody>
                <tfoot>
                    <tr><td colspan="7"><span id="oper">&nbsp</span><span id="fpage">&nbsp</span></td></tr>
                </tfoot>
            </table>
        </div>
        <div id="tip">
            <p class="first">友情提示：顶部的搜索框可以按<strong>过滤器名称</strong>模糊搜索输入搜索条件后可以按下回车<strong>ENTER</strong>键或者旁边的搜索小图标</p>
        </div>
    </body>
</html>

=================================\points\usr\master\filters\filters.php

=================================\points\usr\master\filters\js\filters.js
$(document).ready(function(){
    posts.page = 1;//默认显示第一页
    f.grid('ask/filters.ajx.php');
    
    //编辑过滤器
    $('#grids tfoot tr td').delegate('#edit','click',function(){ 
        var tr = $('#grids tbody .checked');
        var err = document.getElementById('err');
        if (tr.length == 0) { err.innerHTML = '没有条目选中'; return; }
        if (tr.length > 1) { err.innerHTML = '一次只能编辑一个条目'; return; }
        err.innerHTML = '';
        var id = tr.find(':first-child').text();
        window.location.href="filters.oper.php?fid=" + id;    
    });
    
    //删除过滤器
    $('#grids tfoot tr td').delegate('#delete','click',function(){
        var tr = $('#grids tbody .checked');
        var err = document.getElementById('err');
        if (tr.length == 0) { err.innerHTML = '没有条目选中'; return; }
        err.innderHTML = '';
        var id = [];
        tr.each(function(i,obj){
            id.push($(obj).find(':first-child').text());        
        });
        if (window.confirm('你确定要删除这些条目吗？'))
        {
            $.post('ask/filters.delete.ajx.php',{"id":id.join('|')},function(r){
                var j = $.parseJSON(r);
                $('#err').text(j.message);
            });        
        }        
    });
    
    //搜索功能
    $('#searcher',window.top.document).keyup(function(e){
        var v = $(this).val();
        if(e.which == 13)
        {
            posts.searcher = v;
            f.grid('ask/filters.ajx.php');
        }
    });
    $('#ico-search',window.top.document).click(function(){
        var v = $(this).parent().find('#searcher').val();
        posts.searcher = v;
        f.grid('ask/filters.ajx.php');
    });   

});

=================================\points\usr\master\filters\js\filters.js

=================================\points\usr\master\filters\ask\filters.ajx.php
<?php
    require_once $_SERVER['DOCUMENT_ROOT'] . '/points/usr/master/master.inc.php';
    $_SESSION['authority'] = '1111000110';
    
    //返回的数据
    $set = array('status'=>0,'page'=>$_POST['page'],'pageTotal'=>0,'tbody'=>'','operations'=>'','fpage'=>'');
    
    //校验一下$page 必须为一个整数
    if(!ctype_digit($set['page'])){ exit; /**异常的参数传入*/ }
    
    //获取符合条件的总数并处理分页
    $filter = new filter();
    $pageSize = 15; //分页大小
    $set['pageTotal'] = ceil($filter->rows() / $pageSize);
    $limit = $pageSize . ' OFFSET ' . ($set['page'] - 1) * $pageSize;
    
    //搜索设置
    if(isset($_POST['searcher']) && !empty($_POST['searcher']))
    { 
        $search = trim($_POST['searcher']);  $where = "name LIKE '%{$search}%'";
        
    }else{ $where = ''; }
    
    //获取数据
    $filter = new filter($where,array('order'=>'createTime DESC','limit'=>$limit));
    $filters  = $filter->get(array('id','name','fieldText','searcher','SQL','status','createTime'));
    
    //准备显示的内容
    $tbody = '';
    for($i=0;$i<$filter->iTotal();$i++)
    {
        $tbody .= '<tr><td class="width6">' . $filters['id'][$i] . '<label class="selected"></label></td>';
        $tbody .= '<td>' . $filters['name'][$i] . '</td>';
        $tbody .= '<td>' . $filters['fieldText'][$i] . '</td>';
        $tbody .= '<td class="left">' . $filters['searcher'][$i] . '</td>';
        $tbody .= '<td class="left">' . $filters['SQL'][$i] . '</td>';
        $tbody .= '<td>' . $filters['status'][$i] . '</td>';
        $tbody .= '<td>' . $filters['createTime'][$i] . '</td></tr>';   
    }
    if($filter->iTotal() > 0) //有可用数据提供显示
    {
        $set['status'] = 1;
        $set['tbody'] = $tbody;
        $set['operations'] = points::authorized($_SESSION['authority'],array('add','apply','import','export'));
        $fpage = points::fpage($set['pageTotal'],$set['page'],$pageSize);
        $set['fpage'] = empty($fpage) ? '&nbsp' : $fpage;
    }else
    {
        $set['status'] = 2;
        $set['operations'] = '&nbsp;';
        $set['fpage'] = empty($fpage) ? '&nbsp;' : $fpage;
    }    
    points::jan($set);
?>
=================================\points\usr\master\filters\ask\filters.ajx.php

=================================\points\usr\master\filters\ask\filters.delete.ajx.php
<?php
    require $_SERVER['DOCUMENT_ROOT'] . '/points/usr/master/master.inc.php';
    
    if(empty($_POST['id'])){ echo points::jen(0,'没有条目选中，异常的请求！'); exit; }
    
    $arr = explode('|',$_POST['id']);
    $len = count($arr);
    //校验用户输入
    for($i=0;$i<$len;$i++){  if(!ctype_digit($arr[$i])){ echo points::jen(0,'包含了异常的请求！'); exit; }   }
    
    //删除条目
    $where = ' id IN(' . implode(',',$arr) . ')';
    $filter = new filter($where);
    if($filter->delete())
    {
        echo points::jen(1,'删除了共 ' . $len . ' 个条目,请刷新当前页面！');exit;
        
    }else{ echo points::jen(0,'删除失败');exit; }
?>
=================================\points\usr\master\filters\ask\filters.delete.ajx.php


*********************************\points\usr\master\category\js\category.oper.js
$(document).ready(function(){
    //初始值
    var vs = values();
    
    //为空值对象提供默认值 开始时间 结束时间 变量版本
    $('#stime,#etime,#vver').focus(function(){
        var date = new Date();
        var v = $.trim($(this).val());
        if (v.empty())
        {
            var arr = [];
            arr.push(date.getFullYear(),String(date.getMonth() + 1).doubled(),String(date.getDate()).doubled());
            
            var time = [];
            time.push(String(date.getHours()).doubled(),String(date.getMinutes()).doubled(),String(date.getSeconds()).doubled());
            
            if ($(this).attr('id') == 'vver')
            {
                $(this).val(arr.join('') + time.join(''));
            
            }else{ $(this).val(arr.join('-') + ' ' + time.join(':'));}
        }
    });

    $('#save-category').click(function(event){
        event.stopPropagation();    
        var _id = $(this).attr('_id');
        var j = values();
        var modify = false; //用户是否修改了值
        for(var p in j ){ if(j[p] != vs[p]){ modify = true; break;} }
        if (!modify) { $('#category-err').text('没有可用于提交的内容，请检查输入是否有效！'); return false; }
        j.id = vs.id = _id;        
        //不信任校验
        $.post('ask/category.oper.ajx.php',j,function(r){ //alert(r);return;
            var json = $.parseJSON(r);
            $('#category-err').text(json.err);
            if (j.status == '1') { vs = values(); }
        });
    
    });
    
    //初始化变量
    $('#save-var').click(function(){
        var vars = {};
        //获取managingURL的值
        vars.murl = $('#murl').val();
        if(vars.murl.empty()){ $('#variable-err').text('必须指定管理URL');return false; }
        //时间
        vars.stime = $('#stime').val();
        vars.etime = $('#etime').val();
        //版本
        vars.vver = $('#vver').val();
        //url
        vars.surl = $('#surl').val();
        vars.eurl = $('#eurl').val();
        //分页大小
        vars.psize = $('#psize').val();
        $('#variable-err').text('');
        
        //至少有一个变量值不为空
        var empties = 0;
        var i = 0;
        for(var p in vars){  if( p != 'murl'){  i += 1; if(vars[p].empty()){ empties += 1;}  }  }
        if(empties == i){ $('#variable-err').text('没有为此类别提供任何可初始化的变量,初始化失败');return false; }
        
        //提交内容
        $.post('ask/category.oper.vars.ajx.php',vars,function(r){ //console.log(r);
            var j = $.parseJSON(r);
            $('#variable-err').text(j.tip);
        });
    
    });
    
    function values()
    {
        return {"murl":$('#murl').val(),
                "pos":$('#pos').val(),
                "title":$('#title').val(),
                "regions":$('#regions').val(),
                "status":$('#status').val(),
                "aurl":$('#aurl').val()         };
    }
    
    //过滤器 增加字段设定 + 的单击事件
    $('#fadd').click(function(){
        $('#fields tbody tr:last-child').after($('#fields tbody .clone:first-child ').clone());
        $('.check').click(check);
    });
    
    //过滤器 增加字段设定 - 的单击事件
    $('#fdelete').click(function(){
        //不能全部删除
        var tr = $('#fields tbody tr');
        var trCheck = $('#fields tbody .tr-check');
        if(trCheck.length != tr.length && trCheck.length > 0){ $('#fields tbody .tr-check').remove(); }        
    });
    
    $('.check').click(check);
    function check()
    {
        $(this).is(':checked') ? $(this).closest('tr').addClass('tr-check') : $(this).closest('tr').removeClass('tr-check');
    }
    
    //保存过滤器
    var filterOldValue = filtered();
    function filtered() //收集过滤器值的函数
    {
        var filter = {};
        filter.murl = $('#murl').val();
        filter.title = $.trim($('#filter-title').val());
        //过滤器的字段内容 字段名
        var tr = $('#fields .clone');
        var trArr = [];
        tr.each(function(i,obj){
            var td = $(obj).children('td');
            var inputValue = [];
            td.each(function(j,object){                
                var input = $(object).children('input')
                if (input.hasClass('fname') && !input.val().empty()){ inputValue.push('fname=' + input.val());}
                if (input.hasClass('dname') && !input.val().empty()){ inputValue.push('dname=' + input.val());}
                if (input.hasClass('translator') && !input.val().empty()){ inputValue.push('translator=' + input.val()); }
            });
            trArr.push(inputValue.join('|'));
        });
        filter.fields = trArr.join(',');
        filter.searcher = $.trim($('#fsearch').val());
        filter.SQL = $.trim($('#fSQL').val());
        return filter;
    }
    
    //提交内容
    $('#save-filter').click(function(){
        
        //重新收集过滤器的值
        var filter = filtered();  
        if(filter.murl.empty()){ $('#filter-err').text('必须指定管理URL');return false; }
        if(filter.title.empty()){ $('#filter-err').text('标题不能空.');return false;}
        var fields = filter.fields.split(','); 
        if(filter.fields.empty()){ $('#filter-err').text('没有提供过滤器字段内容.');return false; }
        var err = 0;
        for(var i=0;i<fields.length;i++)
        {
            var splits = fields[i].split('|'); 
            if(splits.length < 2){ err += 1; }
            for(var j=0;j<splits.length;j++)
            {
                var field = splits[j].split('=');
                if(field[0] && field[1].empty()){ err += 1; }
            }
        }
        if (err !=0 ) { $('#filter-err').text('字段名或者显示名不能为空');return false; }
        if(filter.SQL.empty()){ $('#filter-err').text('SQL不能空.');return false;}
        var compare = false;
        for(var p in filter){ if(filter[p] != filterOldValue[p]){ compare = true; break;}}
        if(!compare){ $('#filter-err').text('没有可用于提交的内容');return false; }
        //提交过滤器
        $.post('ask/category.oper.filter.ajx.php',filter,function(r){ 
            var j = $.parseJSON(r);
            //更新初始值 阻止重复提交
            if(j.yes == '1'){  filterOldValue = filtered(); }
            $('#filter-err').text(j.tip);
        });
        
    });
    
    //variable filter的折叠显示
    $('.closed').click(function(){
        if ($(this).hasClass('folded'))
        {
            $(this).removeClass('folded');
            $(this).children('img').attr('src','/points/usr/local/images/plus.png');
            $(this).parent().parent().children('div').fadeOut();
        }else
        {
            $(this).children('img').attr('src','/points/usr/local/images/minus.png');
            $(this).addClass('folded');
            $(this).parent().parent().children('div').fadeIn();
        }
    });
    
    
});

*********************************\points\usr\master\category\js\category.oper.js


*********************************\points\usr\master\category\ask\category.oper.filter.ajx.php
<?php
    require $_SERVER['DOCUMENT_ROOT'] . '/points/usr/master/master.inc.php';
    
    $back = array('yes'=>0,'tip'=>'');
    
    $inserts = array();
    //校验  murl
    if(empty($_POST['murl'])){ $back['tip'] = '没有提供管理URL,系统无法处理'; points::jan($back); }
    $murls = points::SURL($_POST['murl']);
    if($murls['status'] == 0)
    {
        $back['tip'] = '提供的管理URL可能不正确或者不符合规范';
        points::jan($back);
    }
    $inserts['position'] = $murls['md5'];
    //查找是否存在此URL的类别记录
    $category = new category(array('MD5'=>$murls['md5']));
    if($category->iTotal() == 0){ $back['tip'] = '初始化用户数据过滤器之前必须初始此类别'; points::jan($back); }
    
    //名称
    if(empty($_POST['title'])){ $back['tip'] = '没有提供过滤器的名称'; points::jan($back); }
    //SQL注入检查  ??
    $inserts['name'] = $_POST['title'];
    
    //字段    "fields":"fname=aaaa|dname=bbbbb|translator=f:1,fname=aaaa|dname=bbbbb|translator=f:1"
    $fieldTip = '过滤器的字段名或者显示名不能为空';
    if(empty($_POST['fields'])){ $back['tip'] = $fieldTip; points::jan($back); }
    $fields = explode(',',$_POST['fields']);
    $arr = array();
    for($i=0,$len=count($fields);$i<$len;$i++)
    {
        $rows = explode('|',$fields[$i]);
        if(count($rows) < 2){ $back['tip'] = $fieldTip; points::jan($back); }
        for($j=0,$l=count($rows);$j<$l;$j++)
        {
            $field = explode('=',$rows[$j]); //SQL注入检查  ??
            if(empty($field[1])){ $back['tip'] = $fieldTip; points::jan($back); }
            $arr[$i][$field[0]] = $field[1]; //SQL注入检查  ??
        }
    }
    $inserts['fieldText'] = json_encode($arr);
    $inserts['flag'] = $fmd5 = $inserts['fieldText'];   
    
    //搜索选项
    if(!empty($_POST['searcher']))
    {
        $inserts['searcher'] = $_POST['searcher'];//SQL注入检查  ??
    }
    
    //SQL语句
    if(empty($_POST['SQL'])){ $back['tip'] = '没有提供过滤器的SQL'; points::jan($back); }
    $inserts['SQL'] = $_POST['SQL']; //SQL注入检查  ??
    
    if(isset($_POST['id']) && ctype_digit($_POST['id'])) //编辑操作
    {
        
    }else
    {
        //是否在pos下存在相同的过滤器
        $filter = new filter(array('flag'=>$fmd5,'position'=>$murls['md5']));
        if($filter->iTotal() > 0){ $back['tip'] = '在此URL下可能存在相同的用户数据过滤器'; points::jan($back); }
        $filter = new filter(); 
        if($filter->set($inserts))
        {
            $back['yes'] = 1; $back['tip'] = '保存成功';
            
        }else{ $back['tip'] = '保存失败'; }
    }
    echo json_encode($back);
?>

*********************************\points\usr\master\category\ask\category.oper.filter.ajx.php



