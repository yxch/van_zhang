
************************************************************************************************************

PostgreSQL  PHP模式   EA11  Sass Javascript 7



加密盐，防止md5值被逆向。
salt = "网站自定义的一个加密盐"，服务端和客户端都有该值。

注册的时候对密码加盐做散列vp = md5(密码明文+salt)，保存到数据库。

登陆：
服务器端产生一个随机值rnd保存在服务器的session里面，并传给浏览器;

浏览器提交加密过的密文：md5(md5(密码明文+salt)+rnd)

服务器验证的时候从数据库读出注册时候保存的散列值vp，做运算md5(vp+rnd)，和浏览器提交的密文做比较。

这样至少可以让服务器不保存密码明文也能防止暴库之后被逆向，同时登陆过程中提交的密文也基本没法还原。
因此中间人只能抓取会话，重放会话，会话过期之后也没法重放了。




面向对象应该牢记：保持对象小型化，模块化，非耦合以及流线型 。

************************************************************************************************************
www.multimall.cn

卖家（vendor）  商品(wares)   订单(order)   买家（buyer） 



useradd -o -u 0 -g 0 -M -d /root -s /bin/bash vxzhan
select (@i:=@i+1) as i,post_time from tb_check_price,(select @i:=0) as tt  order by post_time desc; 


************************************************************************************************************


http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece7631046893b4c4380146d96864968d4e414c4224600003ab3e66c351770d3c77b651cfc091ab1a168252a5577f1c893d60bc0bc902e2e8926307108c31c528516fc8915749b77875b99b868e0ad873484d8d6c4ae5544cb235f3cc6b2ca&p=882a9645d7d212a05aa6c931445598&newp=8d7bcd299e9e12a05abd9b7d0d1788231610db2151d4d1146b82c825d7331b001c3bbfb423221a07d2c4786304ad4e5fe9fb31753c072ba3dda5c91d9fb4c57479&user=baidu&fm=sc&query=apache%C5%E4%D6%C3https&qid=ebceea2f0015d590&p1=11
http://cache.baiducontent.com/c?m=9f65cb4a8c8507ed4fece7631046893b4c4380146d96864968d4e414c42246090137bdf127201306ce963c215afe170bf7a6613464587ef686cc8241d9ba932c3bcd7a742613da14498f53b8ca3632b027872defb86fe3ad813384afa2899912118b&p=882a9645d0af33fc57eff827495d97&newp=8063c64ad48711a05bed926d554ccc231610db2151d4db1e6b82c825d7331b001c3bbfb423221a04d1c17e650ba94c5de0f73673340225a3dda5c91d9fb4c57479cc&user=baidu&fm=sc&query=nginx%C5%E4%D6%C3https&qid=80d4a5780013f27a&p1=5


http://cache.baiducontent.com/c?m=9d78d513d99b00b8589cc0255341c0676914d7306a8090027fa5870fd33a541b0120a1ac26510d19839b213216af3e0daba66a6537747ce0ddd5c013dbba972a248823327701d501548848f19c5b739666c301b7ee04edbff63597a8d7&p=ce7ddc1187904ead00bd9b7d0d1d94&newp=8f338916d9c118fb43bd9b7d0d1d91231610db2151d6db01298ffe0cc4241a1a1a3aecbf27281705d8c07c640ba9425ce1f634723d0834f1f689df08d2ecce7e76dc3c&user=baidu&fm=sc&query=js+FileReader%28%29&qid=94d3ef46000b817e&p1=1




<?php
	// session_start();
	//header("Content-type:text/html;charset=utf-8");
	date_default_timezone_set('Asia/Urumqi');  //设置时区

	// 起始路径 特别注意这个文件的位置，否则不要这样定义这两个常量
	define( 'CPH',strpos(__DIR__,"\\") !== FALSE
		  ? strtr(strtr(__DIR__,["\\"=>'/']),[rtrim($_SERVER['DOCUMENT_ROOT'],'/')=>''])
		  : strtr(__DIR__,[rtrim($_SERVER['DOCUMENT_ROOT'],'/')=>'']) );

	define( 'SPH',__DIR__ . DIRECTORY_SEPARATOR );

	// 设置包含路径
	$includes = [ SPH . 'base', 
		          SPH . 'base' . DIRECTORY_SEPARATOR . 'etc',
		          SPH . 'cross' ];
	// 设置包含路径
	set_include_path(get_include_path() . PATH_SEPARATOR . implode(PATH_SEPARATOR,$includes));

	// 自动载入
	spl_autoload_register(function($class){
		if(!(include $class . '.class.php')){	throw new Exception($class . '.class.php file not exists'); 	}
	});

	// 是否是测试环境
	define('TEST',TRUE);

	// 定义基本的访问路径和前缀
	define('PHOST', TEST ? 'http://www.sample.cn' : 'http://www.sample.com' );
	define('BASIC',  PHOST . '/' . CPH);

	// 是否是演示程序
	$demonstration = FALSE;
	define('DEMO',$demonstration);

	// 随机产生一个序列来更新js和css的版本 仅在测试演示环境下随机产生
	define('VERSION',(TEST || DEMO) ? mt_rand(10000,99999) : 100000);
	
	// 是否打开系统调试
	define('ISDEBUG',(TEST || DEMO) ? TRUE : FALSE);

	// 如果是演示程序或测试环境，打开错误提示否则关闭
	ini_set('display_errors', ( TEST || DEMO ) ? 1 : 0);
	error_reporting( ( DEMO || TEST ) ? E_ALL : 0);




